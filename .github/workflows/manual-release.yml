name: Manual Release Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. 1.0.0)'
        required: true
        type: string

jobs:
  build:
    name: Build Android Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Decode keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > app/release-key.jks

      - name: Generate local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" >> local.properties
          echo "MYAPP_RELEASE_STORE_FILE=app/release-key.jks" >> local.properties
          echo "MYAPP_RELEASE_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> local.properties
          echo "MYAPP_RELEASE_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> local.properties
          echo "MYAPP_RELEASE_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> local.properties

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build release APK
        run: ./gradlew assembleRelease

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk
          overwrite: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ github.event.inputs.version }}
          tag_name: v${{ github.event.inputs.version }}
          files: app/build/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
